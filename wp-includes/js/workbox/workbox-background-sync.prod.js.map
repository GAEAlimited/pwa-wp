{"version":3,"names":[],"mappings":"","sources":["packages/workbox-background-sync/index.mjs"],"sourcesContent":["this.workbox=this.workbox||{},this.workbox.backgroundSync=function(t,e,s,i){\"use strict\";try{self[\"workbox:background-sync:4.0.0-beta.2\"]&&_()}catch(t){}const n=2,r=\"workbox-background-sync\",a=\"requests\",c=\"queueName\",h=\"workbox-background-sync\",o=10080;class u{constructor(t){this.t=t,this.e=new e.DBWrapper(r,n,{onupgradeneeded:t=>this.s(t)})}async pushEntry(t){delete t.id,t.queueName=this.t,await this.e.add(a,t)}async unshiftEntry(t){const e=await this.e.get(a);e?t.id=e.id-1:delete t.id,t.queueName=this.t,await this.e.add(a,t)}async popEntry(){return this.i({direction:\"prev\"})}async shiftEntry(){return this.i({direction:\"next\"})}async i({direction:t}){const[e]=await this.e.getAllMatching(a,{direction:t,index:c,query:IDBKeyRange.only(this.t),count:1});if(e)return await this.e.delete(a,e.id),delete e.id,delete e.queueName,e}s(t){const e=t.target.result,i=t.target.transaction;let n=[];s.migrateDb(t,{v1:t=>{if(e.objectStoreNames.contains(a)){i.objectStore(a).openCursor().onsuccess=(({target:s})=>{const i=s.result;i?(n.push(i.value),i.continue()):(e.deleteObjectStore(a),t())})}else t()},v2:t=>{const s=e.createObjectStore(a,{autoIncrement:!0,keyPath:\"id\"});if(s.createIndex(c,c,{unique:!1}),n.length)for(const t of n){const{queueName:e,storableRequest:i}=t,n=i.timestamp,r=Object.assign(i.requestInit,{url:i.url});s.add({queueName:e,timestamp:n,requestData:r})}t()}})}}const y=[\"method\",\"referrer\",\"referrerPolicy\",\"mode\",\"credentials\",\"cache\",\"redirect\",\"integrity\",\"keepalive\"];class w{static async fromRequest(t){const e={url:t.url,headers:{}};\"GET\"!==t.method&&(e.body=await t.clone().blob());for(const[s,i]of t.headers.entries())e.headers[s]=i;for(const s of y)void 0!==t[s]&&(e[s]=t[s]);return new w(e)}constructor(t){this.n=t}toObject(){const t=Object.assign({},this.n);return t.headers=Object.assign({},this.n.headers),t.body&&(t.body=t.body.slice()),t}toRequest(){return new Request(this.n.url,this.n)}clone(){return new w(this.toObject())}}const d=new Set;class f{constructor(t,{onSync:e,maxRetentionTime:s}={}){if(d.has(t))throw new i.WorkboxError(\"duplicate-queue-name\",{name:t});d.add(t),this.r=t,this.a=e||this.replayRequests,this.c=s||o,this.h=new u(this.r),this.o()}get name(){return this.r}async pushRequest(t){await this.u(t,\"push\")}async unshiftRequest(t){await this.u(t,\"unshift\")}async popRequest(){return this.y(\"pop\")}async shiftRequest(){return this.y(\"shift\")}async u({request:t,metadata:e,timestamp:s=Date.now()},i){const n={requestData:(await w.fromRequest(t.clone())).toObject(),timestamp:s};e&&(n.metadata=e),await this.h[`${i}Entry`](n),await this.registerSync()}async y(t){const e=Date.now(),s=await this.h[`${t}Entry`]();if(s){const i=60*this.c*1e3;return e-s.timestamp>i?this.y(t):(s.request=new w(s.requestData).toRequest(),delete s.requestData,s)}}async replayRequests(){let t;for(;t=await this.shiftRequest();)try{await fetch(t.request)}catch(e){throw await this.unshiftRequest(t),new i.WorkboxError(\"queue-replay-failed\",{name:this.r})}}async registerSync(){if(\"sync\"in registration)try{await registration.sync.register(`${h}:${this.r}`)}catch(t){}}o(){\"sync\"in registration?self.addEventListener(\"sync\",t=>{t.tag===`${h}:${this.r}`&&t.waitUntil(this.a({queue:this}))}):this.a({queue:this})}static get w(){return d}}return t.Queue=f,t.Plugin=class{constructor(...t){this.d=new f(...t),this.fetchDidFail=this.fetchDidFail.bind(this)}async fetchDidFail({request:t}){await this.d.pushRequest({request:t})}},t}({},workbox.core._private,workbox.core._private,workbox.core._private);\n"],"file":"workbox-background-sync.prod.js"}